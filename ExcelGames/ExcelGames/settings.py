"""
Django settings for ExcelGames project.

Generated by 'django-admin startproject' using Django 1.9.8.

For more information on this file, see
https://docs.djangoproject.com/en/1.9/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/1.9/ref/settings/
"""

import os

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/1.9/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = '@g0!si%z_lgg-9)ry_*)eal_@_$jc7t&=2@r^+0etso!zq=z7m'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',

    'home',

    # Dalalbull #
    'djcelery',
    'kombu.transport.django',
    'channels',
    'dalalbull',
]

MIDDLEWARE_CLASSES = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.auth.middleware.SessionAuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'ExcelGames.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'ExcelGames.wsgi.application'


# Database
# https://docs.djangoproject.com/en/1.9/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.mysql',
        'NAME': 'excel2k16',
        'USER': 'USER',
        'PASSWORD': 'PASSWORD',
        'HOST': '',
        'PORT': '',
    }
}


# Password validation
# https://docs.djangoproject.com/en/1.9/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/1.9/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'Asia/Kolkata'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/1.9/howto/static-files/

STATIC_URL = '/static/'

STATIC_ROOT = os.path.join(BASE_DIR, "static/")





 
#====================== Celery settings ========================#

## Broker settings.
BROKER_URL = 'amqp://ExcelGames:password@localhost:5672//'

# List of modules to import when celery starts.
CELERY_IMPORTS = ('dalalbull.tasks', )

## Using the database to store task state and results.
CELERY_RESULT_BACKEND = 'db+sqlite:///results.db'

CELERY_ANNOTATIONS = {
                        'tasks.tq': {'rate_limit': '10/s'},
                        'tasks.dq': {'rate_limit': '10/s'},
                        'tasks.broadcastNiftyData': {'rate_limit': '1/s'}
                    }

from datetime import timedelta


CELERYBEAT_SCHEDULE = {
    'net-every-20-seconds': {
            'task': 'dalalbull.tasks.net',
            'schedule': timedelta(seconds=20),
            'args': ()
     },
    'dq-every-5-seconds': {
            'task': 'dalalbull.tasks.dq',
            'schedule': timedelta(seconds=300),
            'args': ()
     },
    'tq-every-second': {
            'task': 'dalalbull.tasks.tq',
            'schedule': timedelta(seconds=1), 
            'args': ()
     },
     'broadcastNiftyData-every-1-seconds': {
            'task': 'dalalbull.tasks.broadcastNiftyData',
            'schedule': timedelta(seconds=1),
            'args': ()
     },
     'broadcastLeaderboardData-every-600-seconds': {
            'task': 'dalalbull.tasks.broadcastLeaderboardData',
            'schedule': timedelta(seconds=600),
            'args': ()
     },
     'broadcastGraphData-every-300-seconds': {
            'task': 'dalalbull.tasks.broadcastGraphData',
            'schedule': timedelta(seconds=300),
            'args': ()
     },
     'broadcastPortfolioData-every-1-seconds': {
            'task': 'dalalbull.tasks.broadcastPortfolioData',
            'schedule': timedelta(seconds=1),
            'args': ()
     },
     'broadcastSellData-every-20-seconds': {
            'task': 'dalalbull.tasks.broadcastSellData',
            'schedule': timedelta(seconds=20),
            'args': ()
     },
     'broadcastTickerData-every-60-seconds': {
            'task': 'dalalbull.tasks.broadcastTickerData',
            'schedule': timedelta(seconds=60),
            'args': ()
     },
}








# ================  CHANNELS SETTINGS ================ #


CHANNEL_LAYERS = {
    "default": {
        "BACKEND": "asgi_redis.RedisChannelLayer",
        "CONFIG": {
            "hosts": [os.environ.get('REDIS_URL', 'redis://localhost:6379')],
        },
        "ROUTING": "dalalbull.routing.channel_routing",
    },
}
